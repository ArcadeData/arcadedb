/* Generated By:JJTree&JavaCC: Do not edit this line. OrientSqlConstants.java */
package com.orientechnologies.orient.core.sql.parser;

/** Token literal values and constants. Generated by org.javacc.parser.OtherFilesGen#start() */
public interface OrientSqlConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 8;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int SELECT = 11;
  /** RegularExpression Id. */
  int TRAVERSE = 12;
  /** RegularExpression Id. */
  int MATCH = 13;
  /** RegularExpression Id. */
  int INSERT = 14;
  /** RegularExpression Id. */
  int CREATE = 15;
  /** RegularExpression Id. */
  int DELETE = 16;
  /** RegularExpression Id. */
  int VERTEX = 17;
  /** RegularExpression Id. */
  int EDGE = 18;
  /** RegularExpression Id. */
  int UPDATE = 19;
  /** RegularExpression Id. */
  int UPSERT = 20;
  /** RegularExpression Id. */
  int FROM = 21;
  /** RegularExpression Id. */
  int TO = 22;
  /** RegularExpression Id. */
  int WHERE = 23;
  /** RegularExpression Id. */
  int WHILE = 24;
  /** RegularExpression Id. */
  int INTO = 25;
  /** RegularExpression Id. */
  int VALUE = 26;
  /** RegularExpression Id. */
  int VALUES = 27;
  /** RegularExpression Id. */
  int SET = 28;
  /** RegularExpression Id. */
  int ADD = 29;
  /** RegularExpression Id. */
  int PUT = 30;
  /** RegularExpression Id. */
  int MERGE = 31;
  /** RegularExpression Id. */
  int CONTENT = 32;
  /** RegularExpression Id. */
  int REMOVE = 33;
  /** RegularExpression Id. */
  int INCREMENT = 34;
  /** RegularExpression Id. */
  int AND = 35;
  /** RegularExpression Id. */
  int OR = 36;
  /** RegularExpression Id. */
  int NULL = 37;
  /** RegularExpression Id. */
  int DEFINED = 38;
  /** RegularExpression Id. */
  int ORDER = 39;
  /** RegularExpression Id. */
  int GROUP = 40;
  /** RegularExpression Id. */
  int BY = 41;
  /** RegularExpression Id. */
  int LIMIT = 42;
  /** RegularExpression Id. */
  int SKIP2 = 43;
  /** RegularExpression Id. */
  int BATCH = 44;
  /** RegularExpression Id. */
  int OFFSET = 45;
  /** RegularExpression Id. */
  int TIMEOUT = 46;
  /** RegularExpression Id. */
  int ASC = 47;
  /** RegularExpression Id. */
  int AS = 48;
  /** RegularExpression Id. */
  int DESC = 49;
  /** RegularExpression Id. */
  int FETCHPLAN = 50;
  /** RegularExpression Id. */
  int RETURN = 51;
  /** RegularExpression Id. */
  int BEFORE = 52;
  /** RegularExpression Id. */
  int AFTER = 53;
  /** RegularExpression Id. */
  int LOCK = 54;
  /** RegularExpression Id. */
  int RECORD = 55;
  /** RegularExpression Id. */
  int WAIT = 56;
  /** RegularExpression Id. */
  int RETRY = 57;
  /** RegularExpression Id. */
  int LET = 58;
  /** RegularExpression Id. */
  int CACHE = 59;
  /** RegularExpression Id. */
  int CYCLE = 60;
  /** RegularExpression Id. */
  int NOCACHE = 61;
  /** RegularExpression Id. */
  int NOLIMIT = 62;
  /** RegularExpression Id. */
  int NOCYCLE = 63;
  /** RegularExpression Id. */
  int UNSAFE = 64;
  /** RegularExpression Id. */
  int PARALLEL = 65;
  /** RegularExpression Id. */
  int STRATEGY = 66;
  /** RegularExpression Id. */
  int DEPTH_FIRST = 67;
  /** RegularExpression Id. */
  int BREADTH_FIRST = 68;
  /** RegularExpression Id. */
  int LUCENE = 69;
  /** RegularExpression Id. */
  int NEAR = 70;
  /** RegularExpression Id. */
  int WITHIN = 71;
  /** RegularExpression Id. */
  int UNWIND = 72;
  /** RegularExpression Id. */
  int MAXDEPTH = 73;
  /** RegularExpression Id. */
  int MINDEPTH = 74;
  /** RegularExpression Id. */
  int CLASS = 75;
  /** RegularExpression Id. */
  int SUPERCLASS = 76;
  /** RegularExpression Id. */
  int CLASSES = 77;
  /** RegularExpression Id. */
  int SUPERCLASSES = 78;
  /** RegularExpression Id. */
  int VIEW = 79;
  /** RegularExpression Id. */
  int UPDATABLE = 80;
  /** RegularExpression Id. */
  int EXCEPTION = 81;
  /** RegularExpression Id. */
  int PROFILE = 82;
  /** RegularExpression Id. */
  int STORAGE = 83;
  /** RegularExpression Id. */
  int ON = 84;
  /** RegularExpression Id. */
  int OFF = 85;
  /** RegularExpression Id. */
  int TRUNCATE = 86;
  /** RegularExpression Id. */
  int POLYMORPHIC = 87;
  /** RegularExpression Id. */
  int FIND = 88;
  /** RegularExpression Id. */
  int REFERENCES = 89;
  /** RegularExpression Id. */
  int EXTENDS = 90;
  /** RegularExpression Id. */
  int CLUSTERS = 91;
  /** RegularExpression Id. */
  int ABSTRACT = 92;
  /** RegularExpression Id. */
  int ALTER = 93;
  /** RegularExpression Id. */
  int NAME = 94;
  /** RegularExpression Id. */
  int SHORTNAME = 95;
  /** RegularExpression Id. */
  int OVERSIZE = 96;
  /** RegularExpression Id. */
  int STRICTMODE = 97;
  /** RegularExpression Id. */
  int ADDCLUSTER = 98;
  /** RegularExpression Id. */
  int REMOVECLUSTER = 99;
  /** RegularExpression Id. */
  int CUSTOM = 100;
  /** RegularExpression Id. */
  int CLUSTERSELECTION = 101;
  /** RegularExpression Id. */
  int DESCRIPTION = 102;
  /** RegularExpression Id. */
  int ENCRYPTION = 103;
  /** RegularExpression Id. */
  int DROP = 104;
  /** RegularExpression Id. */
  int PROPERTY = 105;
  /** RegularExpression Id. */
  int FORCE = 106;
  /** RegularExpression Id. */
  int METADATA = 107;
  /** RegularExpression Id. */
  int INDEX = 108;
  /** RegularExpression Id. */
  int COLLATE = 109;
  /** RegularExpression Id. */
  int ENGINE = 110;
  /** RegularExpression Id. */
  int REBUILD = 111;
  /** RegularExpression Id. */
  int ID = 112;
  /** RegularExpression Id. */
  int DATABASE = 113;
  /** RegularExpression Id. */
  int OPTIMIZE = 114;
  /** RegularExpression Id. */
  int LINK = 115;
  /** RegularExpression Id. */
  int TYPE = 116;
  /** RegularExpression Id. */
  int INVERSE = 117;
  /** RegularExpression Id. */
  int EXPLAIN = 118;
  /** RegularExpression Id. */
  int GRANT = 119;
  /** RegularExpression Id. */
  int REVOKE = 120;
  /** RegularExpression Id. */
  int READ = 121;
  /** RegularExpression Id. */
  int EXECUTE = 122;
  /** RegularExpression Id. */
  int ALL = 123;
  /** RegularExpression Id. */
  int NONE = 124;
  /** RegularExpression Id. */
  int FUNCTION = 125;
  /** RegularExpression Id. */
  int PARAMETERS = 126;
  /** RegularExpression Id. */
  int IDEMPOTENT = 127;
  /** RegularExpression Id. */
  int LANGUAGE = 128;
  /** RegularExpression Id. */
  int BEGIN = 129;
  /** RegularExpression Id. */
  int COMMIT = 130;
  /** RegularExpression Id. */
  int ROLLBACK = 131;
  /** RegularExpression Id. */
  int IF = 132;
  /** RegularExpression Id. */
  int ELSE = 133;
  /** RegularExpression Id. */
  int CONTINUE = 134;
  /** RegularExpression Id. */
  int FAIL = 135;
  /** RegularExpression Id. */
  int ISOLATION = 136;
  /** RegularExpression Id. */
  int SLEEP = 137;
  /** RegularExpression Id. */
  int CONSOLE = 138;
  /** RegularExpression Id. */
  int BLOB = 139;
  /** RegularExpression Id. */
  int SHARED = 140;
  /** RegularExpression Id. */
  int DEFAULT_ = 141;
  /** RegularExpression Id. */
  int SEQUENCE = 142;
  /** RegularExpression Id. */
  int START = 143;
  /** RegularExpression Id. */
  int OPTIONAL = 144;
  /** RegularExpression Id. */
  int COUNT = 145;
  /** RegularExpression Id. */
  int DISTINCT = 146;
  /** RegularExpression Id. */
  int HA = 147;
  /** RegularExpression Id. */
  int STATUS = 148;
  /** RegularExpression Id. */
  int SERVER = 149;
  /** RegularExpression Id. */
  int SYNC = 150;
  /** RegularExpression Id. */
  int EXISTS = 151;
  /** RegularExpression Id. */
  int FOREACH = 152;
  /** RegularExpression Id. */
  int MOVE = 153;
  /** RegularExpression Id. */
  int DEPTH_ALIAS = 154;
  /** RegularExpression Id. */
  int PATH_ALIAS = 155;
  /** RegularExpression Id. */
  int IDENTIFIED = 156;
  /** RegularExpression Id. */
  int ROLE = 157;
  /** RegularExpression Id. */
  int USER = 158;
  /** RegularExpression Id. */
  int USERS = 159;
  /** RegularExpression Id. */
  int RID = 160;
  /** RegularExpression Id. */
  int SECURITY = 161;
  /** RegularExpression Id. */
  int POLICY = 162;
  /** RegularExpression Id. */
  int DEFAULTCLUSTER = 163;
  /** RegularExpression Id. */
  int SYSTEM = 164;
  /** RegularExpression Id. */
  int THIS = 165;
  /** RegularExpression Id. */
  int RECORD_ATTRIBUTE = 166;
  /** RegularExpression Id. */
  int RID_ATTR = 167;
  /** RegularExpression Id. */
  int RID_STRING = 168;
  /** RegularExpression Id. */
  int CLASS_ATTR = 169;
  /** RegularExpression Id. */
  int VERSION_ATTR = 170;
  /** RegularExpression Id. */
  int SIZE_ATTR = 171;
  /** RegularExpression Id. */
  int TYPE_ATTR = 172;
  /** RegularExpression Id. */
  int RAW_ATTR = 173;
  /** RegularExpression Id. */
  int RID_ID_ATTR = 174;
  /** RegularExpression Id. */
  int RID_POS_ATTR = 175;
  /** RegularExpression Id. */
  int FIELDS_ATTR = 176;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 177;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 178;
  /** RegularExpression Id. */
  int HEX_LITERAL = 179;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 180;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 181;
  /** RegularExpression Id. */
  int DECIMAL_FLOATING_POINT_LITERAL = 182;
  /** RegularExpression Id. */
  int DECIMAL_EXPONENT = 183;
  /** RegularExpression Id. */
  int HEXADECIMAL_FLOATING_POINT_LITERAL = 184;
  /** RegularExpression Id. */
  int HEXADECIMAL_EXPONENT = 185;
  /** RegularExpression Id. */
  int CHARACTER_LITERAL = 186;
  /** RegularExpression Id. */
  int STRING_LITERAL = 187;
  /** RegularExpression Id. */
  int INTEGER_RANGE = 188;
  /** RegularExpression Id. */
  int ELLIPSIS_INTEGER_RANGE = 189;
  /** RegularExpression Id. */
  int TRUE = 190;
  /** RegularExpression Id. */
  int FALSE = 191;
  /** RegularExpression Id. */
  int LPAREN = 192;
  /** RegularExpression Id. */
  int RPAREN = 193;
  /** RegularExpression Id. */
  int LBRACE = 194;
  /** RegularExpression Id. */
  int RBRACE = 195;
  /** RegularExpression Id. */
  int LBRACKET = 196;
  /** RegularExpression Id. */
  int RBRACKET = 197;
  /** RegularExpression Id. */
  int SEMICOLON = 198;
  /** RegularExpression Id. */
  int COMMA = 199;
  /** RegularExpression Id. */
  int DOT = 200;
  /** RegularExpression Id. */
  int AT = 201;
  /** RegularExpression Id. */
  int DOLLAR = 202;
  /** RegularExpression Id. */
  int BACKTICK = 203;
  /** RegularExpression Id. */
  int EQ = 204;
  /** RegularExpression Id. */
  int EQEQ = 205;
  /** RegularExpression Id. */
  int LT = 206;
  /** RegularExpression Id. */
  int GT = 207;
  /** RegularExpression Id. */
  int BANG = 208;
  /** RegularExpression Id. */
  int TILDE = 209;
  /** RegularExpression Id. */
  int HOOK = 210;
  /** RegularExpression Id. */
  int COLON = 211;
  /** RegularExpression Id. */
  int LE = 212;
  /** RegularExpression Id. */
  int GE = 213;
  /** RegularExpression Id. */
  int NE = 214;
  /** RegularExpression Id. */
  int NEQ = 215;
  /** RegularExpression Id. */
  int SC_OR = 216;
  /** RegularExpression Id. */
  int SC_AND = 217;
  /** RegularExpression Id. */
  int INCR = 218;
  /** RegularExpression Id. */
  int DECR = 219;
  /** RegularExpression Id. */
  int PLUS = 220;
  /** RegularExpression Id. */
  int MINUS = 221;
  /** RegularExpression Id. */
  int STAR = 222;
  /** RegularExpression Id. */
  int SLASH = 223;
  /** RegularExpression Id. */
  int BIT_AND = 224;
  /** RegularExpression Id. */
  int NULL_COALESCING = 225;
  /** RegularExpression Id. */
  int BIT_OR = 226;
  /** RegularExpression Id. */
  int XOR = 227;
  /** RegularExpression Id. */
  int REM = 228;
  /** RegularExpression Id. */
  int LSHIFT = 229;
  /** RegularExpression Id. */
  int PLUSASSIGN = 230;
  /** RegularExpression Id. */
  int MINUSASSIGN = 231;
  /** RegularExpression Id. */
  int STARASSIGN = 232;
  /** RegularExpression Id. */
  int SLASHASSIGN = 233;
  /** RegularExpression Id. */
  int ANDASSIGN = 234;
  /** RegularExpression Id. */
  int ORASSIGN = 235;
  /** RegularExpression Id. */
  int XORASSIGN = 236;
  /** RegularExpression Id. */
  int REMASSIGN = 237;
  /** RegularExpression Id. */
  int LSHIFTASSIGN = 238;
  /** RegularExpression Id. */
  int RSIGNEDSHIFTASSIGN = 239;
  /** RegularExpression Id. */
  int RUNSIGNEDSHIFTASSIGN = 240;
  /** RegularExpression Id. */
  int RSHIFT = 241;
  /** RegularExpression Id. */
  int RUNSIGNEDSHIFT = 242;
  /** RegularExpression Id. */
  int ELLIPSIS = 243;
  /** RegularExpression Id. */
  int RANGE = 244;
  /** RegularExpression Id. */
  int NOT = 245;
  /** RegularExpression Id. */
  int IN = 246;
  /** RegularExpression Id. */
  int LIKE = 247;
  /** RegularExpression Id. */
  int IS = 248;
  /** RegularExpression Id. */
  int BETWEEN = 249;
  /** RegularExpression Id. */
  int CONTAINS = 250;
  /** RegularExpression Id. */
  int CONTAINSALL = 251;
  /** RegularExpression Id. */
  int CONTAINSANY = 252;
  /** RegularExpression Id. */
  int CONTAINSKEY = 253;
  /** RegularExpression Id. */
  int CONTAINSVALUE = 254;
  /** RegularExpression Id. */
  int CONTAINSTEXT = 255;
  /** RegularExpression Id. */
  int MATCHES = 256;
  /** RegularExpression Id. */
  int KEY = 257;
  /** RegularExpression Id. */
  int INSTANCEOF = 258;
  /** RegularExpression Id. */
  int CLUSTER = 259;
  /** RegularExpression Id. */
  int IDENTIFIER = 260;
  /** RegularExpression Id. */
  int QUOTED_IDENTIFIER = 261;
  /** RegularExpression Id. */
  int INDEX_COLON = 262;
  /** RegularExpression Id. */
  int INDEXVALUES_IDENTIFIER = 263;
  /** RegularExpression Id. */
  int INDEXVALUESASC_IDENTIFIER = 264;
  /** RegularExpression Id. */
  int INDEXVALUESDESC_IDENTIFIER = 265;
  /** RegularExpression Id. */
  int CLUSTER_IDENTIFIER = 266;
  /** RegularExpression Id. */
  int CLUSTER_NUMBER_IDENTIFIER = 267;
  /** RegularExpression Id. */
  int METADATA_IDENTIFIER = 268;
  /** RegularExpression Id. */
  int LETTER = 269;
  /** RegularExpression Id. */
  int PART_LETTER = 270;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_FORMAL_COMMENT = 1;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<token of kind 6>",
    "\"/*\"",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 10>",
    "<SELECT>",
    "<TRAVERSE>",
    "<MATCH>",
    "<INSERT>",
    "<CREATE>",
    "<DELETE>",
    "<VERTEX>",
    "<EDGE>",
    "<UPDATE>",
    "<UPSERT>",
    "<FROM>",
    "<TO>",
    "<WHERE>",
    "<WHILE>",
    "<INTO>",
    "<VALUE>",
    "<VALUES>",
    "<SET>",
    "<ADD>",
    "<PUT>",
    "<MERGE>",
    "<CONTENT>",
    "<REMOVE>",
    "<INCREMENT>",
    "<AND>",
    "<OR>",
    "<NULL>",
    "<DEFINED>",
    "<ORDER>",
    "<GROUP>",
    "<BY>",
    "<LIMIT>",
    "<SKIP2>",
    "<BATCH>",
    "<OFFSET>",
    "<TIMEOUT>",
    "<ASC>",
    "<AS>",
    "<DESC>",
    "<FETCHPLAN>",
    "<RETURN>",
    "<BEFORE>",
    "<AFTER>",
    "<LOCK>",
    "<RECORD>",
    "<WAIT>",
    "<RETRY>",
    "<LET>",
    "<CACHE>",
    "<CYCLE>",
    "<NOCACHE>",
    "<NOLIMIT>",
    "<NOCYCLE>",
    "<UNSAFE>",
    "<PARALLEL>",
    "<STRATEGY>",
    "<DEPTH_FIRST>",
    "<BREADTH_FIRST>",
    "<LUCENE>",
    "<NEAR>",
    "<WITHIN>",
    "<UNWIND>",
    "<MAXDEPTH>",
    "<MINDEPTH>",
    "<CLASS>",
    "<SUPERCLASS>",
    "<CLASSES>",
    "<SUPERCLASSES>",
    "<VIEW>",
    "<UPDATABLE>",
    "<EXCEPTION>",
    "<PROFILE>",
    "<STORAGE>",
    "<ON>",
    "<OFF>",
    "<TRUNCATE>",
    "<POLYMORPHIC>",
    "<FIND>",
    "<REFERENCES>",
    "<EXTENDS>",
    "<CLUSTERS>",
    "<ABSTRACT>",
    "<ALTER>",
    "<NAME>",
    "<SHORTNAME>",
    "<OVERSIZE>",
    "<STRICTMODE>",
    "<ADDCLUSTER>",
    "<REMOVECLUSTER>",
    "<CUSTOM>",
    "<CLUSTERSELECTION>",
    "<DESCRIPTION>",
    "<ENCRYPTION>",
    "<DROP>",
    "<PROPERTY>",
    "<FORCE>",
    "<METADATA>",
    "<INDEX>",
    "<COLLATE>",
    "<ENGINE>",
    "<REBUILD>",
    "<ID>",
    "<DATABASE>",
    "<OPTIMIZE>",
    "<LINK>",
    "<TYPE>",
    "<INVERSE>",
    "<EXPLAIN>",
    "<GRANT>",
    "<REVOKE>",
    "<READ>",
    "<EXECUTE>",
    "<ALL>",
    "<NONE>",
    "<FUNCTION>",
    "<PARAMETERS>",
    "<IDEMPOTENT>",
    "<LANGUAGE>",
    "<BEGIN>",
    "<COMMIT>",
    "<ROLLBACK>",
    "<IF>",
    "<ELSE>",
    "<CONTINUE>",
    "<FAIL>",
    "<ISOLATION>",
    "<SLEEP>",
    "<CONSOLE>",
    "<BLOB>",
    "<SHARED>",
    "<DEFAULT_>",
    "<SEQUENCE>",
    "<START>",
    "<OPTIONAL>",
    "<COUNT>",
    "<DISTINCT>",
    "<HA>",
    "<STATUS>",
    "<SERVER>",
    "<SYNC>",
    "<EXISTS>",
    "<FOREACH>",
    "<MOVE>",
    "<DEPTH_ALIAS>",
    "<PATH_ALIAS>",
    "<IDENTIFIED>",
    "<ROLE>",
    "<USER>",
    "<USERS>",
    "<RID>",
    "<SECURITY>",
    "<POLICY>",
    "<DEFAULTCLUSTER>",
    "<SYSTEM>",
    "<THIS>",
    "<RECORD_ATTRIBUTE>",
    "<RID_ATTR>",
    "<RID_STRING>",
    "<CLASS_ATTR>",
    "<VERSION_ATTR>",
    "<SIZE_ATTR>",
    "<TYPE_ATTR>",
    "<RAW_ATTR>",
    "<RID_ID_ATTR>",
    "<RID_POS_ATTR>",
    "<FIELDS_ATTR>",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<DECIMAL_FLOATING_POINT_LITERAL>",
    "<DECIMAL_EXPONENT>",
    "<HEXADECIMAL_FLOATING_POINT_LITERAL>",
    "<HEXADECIMAL_EXPONENT>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<INTEGER_RANGE>",
    "<ELLIPSIS_INTEGER_RANGE>",
    "<TRUE>",
    "<FALSE>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"@\"",
    "\"$\"",
    "\"`\"",
    "\"=\"",
    "\"==\"",
    "\"<\"",
    "\">\"",
    "\"!\"",
    "\"~\"",
    "\"?\"",
    "\":\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"<>\"",
    "\"||\"",
    "\"&&\"",
    "\"++\"",
    "\"--\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"??\"",
    "\"|\"",
    "\"^\"",
    "\"%\"",
    "\"<<\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\"%=\"",
    "\"<<=\"",
    "\">>=\"",
    "\">>>=\"",
    "\">>\"",
    "\">>>\"",
    "\"...\"",
    "\"..\"",
    "<NOT>",
    "<IN>",
    "<LIKE>",
    "<IS>",
    "<BETWEEN>",
    "<CONTAINS>",
    "<CONTAINSALL>",
    "<CONTAINSANY>",
    "<CONTAINSKEY>",
    "<CONTAINSVALUE>",
    "<CONTAINSTEXT>",
    "<MATCHES>",
    "<KEY>",
    "<INSTANCEOF>",
    "<CLUSTER>",
    "<IDENTIFIER>",
    "<QUOTED_IDENTIFIER>",
    "<INDEX_COLON>",
    "<INDEXVALUES_IDENTIFIER>",
    "<INDEXVALUESASC_IDENTIFIER>",
    "<INDEXVALUESDESC_IDENTIFIER>",
    "<CLUSTER_IDENTIFIER>",
    "<CLUSTER_NUMBER_IDENTIFIER>",
    "<METADATA_IDENTIFIER>",
    "<LETTER>",
    "<PART_LETTER>",
    "\"#\"",
    "\"__@recordmap@___\"",
    "\"round-robin\"",
    "\"-servers\"",
    "\"-db\"",
    "\"-latency\"",
    "\"-messages\"",
    "\"-locks\"",
    "\"-all\"",
    "\"-output=text\"",
    "\"-force\"",
    "\"-full\"",
    "\"-full_replace\"",
    "\"-merge\"",
  };
}

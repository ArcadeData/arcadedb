/*
 * Copyright Â© 2021-present Arcade Data Ltd (info@arcadedata.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-FileCopyrightText: 2021-present Arcade Data Ltd (info@arcadedata.com)
 * SPDX-License-Identifier: Apache-2.0
 */
/* Generated by: ParserGeneratorCC: Do not edit this line. GraphQLParserVisitor.java Version 1.1.3 */
package com.arcadedb.graphql.parser;

public interface GraphQLParserVisitor
{
  public Object visit(SimpleNode node, Object data);
  public Object visit(Document node, Object data);
  public Object visit(Definition node, Object data);
  public Object visit(OperationDefinition node, Object data);
  public Object visit(VariableDefinitions node, Object data);
  public Object visit(VariableDefinition node, Object data);
  public Object visit(VariableLiteral node, Object data);
  public Object visit(DefaultValue node, Object data);
  public Object visit(SelectionSet node, Object data);
  public Object visit(Selection node, Object data);
  public Object visit(Field node, Object data);
  public Object visit(FieldWithAlias node, Object data);
  public Object visit(Arguments node, Object data);
  public Object visit(Argument node, Object data);
  public Object visit(FragmentSpread node, Object data);
  public Object visit(InlineFragment node, Object data);
  public Object visit(FragmentDefinition node, Object data);
  public Object visit(FragmentName node, Object data);
  public Object visit(TypeCondition node, Object data);
  public Object visit(Name node, Object data);
  public Object visit(Value node, Object data);
  public Object visit(ValueWithVariable node, Object data);
  public Object visit(EnumValue node, Object data);
  public Object visit(ListValue node, Object data);
  public Object visit(ListValueWithVariable node, Object data);
  public Object visit(ObjectValue node, Object data);
  public Object visit(ObjectValueWithVariable node, Object data);
  public Object visit(ObjectField node, Object data);
  public Object visit(ObjectFieldWithValue node, Object data);
  public Object visit(Directives node, Object data);
  public Object visit(Directive node, Object data);
  public Object visit(Type node, Object data);
  public Object visit(TypeName node, Object data);
  public Object visit(ListType node, Object data);
  public Object visit(TypeSystemDefinition node, Object data);
  public Object visit(SchemaDefinition node, Object data);
  public Object visit(OperationTypeDefinition node, Object data);
  public Object visit(TypeDefinition node, Object data);
  public Object visit(ScalarTypeDefinition node, Object data);
  public Object visit(ObjectTypeDefinition node, Object data);
  public Object visit(ImplementsInterface node, Object data);
  public Object visit(FieldDefinition node, Object data);
  public Object visit(ArgumentsDefinition node, Object data);
  public Object visit(InputValueDefinition node, Object data);
  public Object visit(InterfaceTypeDefinition node, Object data);
  public Object visit(UnionTypeDefinition node, Object data);
  public Object visit(UnionMembers node, Object data);
  public Object visit(EnumTypeDefinition node, Object data);
  public Object visit(EnumValueDefinition node, Object data);
  public Object visit(InputObjectTypeDefinition node, Object data);
  public Object visit(TypeExtensionDefinition node, Object data);
  public Object visit(DirectiveDefinition node, Object data);
  public Object visit(DirectiveLocation node, Object data);
  public Object visit(DirectiveLocations node, Object data);
  public Object visit(BooleanValue node, Object data);
  public Object visit(IntValue node, Object data);
  public Object visit(FloatValue node, Object data);
  public Object visit(StringValue node, Object data);
  public Object visit(OperationType node, Object data);
}
/* ParserGeneratorCC - OriginalChecksum=190db8fc1bc2ce8a84ebef80b4987a5a (do not edit this line) */

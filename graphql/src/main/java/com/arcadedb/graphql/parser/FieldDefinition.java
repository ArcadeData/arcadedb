/*
 * Copyright Â© 2021-present Arcade Data Ltd (info@arcadedata.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-FileCopyrightText: 2021-present Arcade Data Ltd (info@arcadedata.com)
 * SPDX-License-Identifier: Apache-2.0
 */
/* Generated by: JJTree: Do not edit this line. FieldDefinition.java Version 1.1 */
/* ParserGeneratorCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=true,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.arcadedb.graphql.parser;

public class FieldDefinition extends AbstractField {
  protected ArgumentsDefinition argumentsDefinition;
  protected Type                type;

  public FieldDefinition(int id) {
    super(id);
  }

  public FieldDefinition(GraphQLParser p, int id) {
    super(p, id);
  }

  public Type getType() {
    return type;
  }

  public ArgumentsDefinition getArgumentsDefinition() {
    return argumentsDefinition;
  }

  @Override
  public String toString() {
    return "FieldDefinition{" + getName() + " " + type.treeToString("") + (directives != null ? directives.treeToString(" ") : "") + "}";
  }

  @Override
  public String treeToString(String prefix, final Class... excludes) {
    return prefix + this;
  }
}
/* ParserGeneratorCC - OriginalChecksum=6128650aa4801ab60df8105dc264845f (do not edit this line) */

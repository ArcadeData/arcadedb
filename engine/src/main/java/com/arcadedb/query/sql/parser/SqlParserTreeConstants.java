/* Generated by: ParserGeneratorCC: Do not edit this line. SqlParserTreeConstants.java Version 1.1.3 */
package com.arcadedb.query.sql.parser;

public interface SqlParserTreeConstants {
  int JJTRID                                = 0;
  int JJTBUCKETIDENTIFIER                   = 1;
  int JJTPARSE                              = 2;
  int JJTPARSESCRIPT                        = 3;
  int JJTPSTRING                            = 4;
  int JJTIDENTIFIER                         = 5;
  int JJTPINTEGER                           = 6;
  int JJTFLOATINGPOINT                      = 7;
  int JJTPNUMBER                            = 8;
  int JJTSTATEMENT                          = 9;
  int JJTSTATEMENTSEMICOLON                 = 10;
  int JJTSTATEMENTINTERNAL                  = 11;
  int JJTQUERYSTATEMENT                     = 12;
  int JJTSELECTWITHOUTTARGETSTATEMENT       = 13;
  int JJTSELECTSTATEMENT                    = 14;
  int JJTTRAVERSESTATEMENT                  = 15;
  int JJTMATCHSTATEMENT                     = 16;
  int JJTDELETESTATEMENT                    = 17;
  int JJTDELETEVERTEXSTATEMENT              = 18;
  int JJTDELETEEDGESTATEMENT                = 19;
  int JJTDELETEEDGEBYRIDSTATEMENT           = 20;
  int JJTDELETEEDGEFROMTOSTATEMENT          = 21;
  int JJTDELETEEDGETOSTATEMENT              = 22;
  int JJTDELETEEDGEVTOSTATEMENT             = 23;
  int JJTDELETEEDGEWHERESTATEMENT           = 24;
  int JJTUPDATEEDGESTATEMENT                = 25;
  int JJTUPDATESTATEMENT                    = 26;
  int JJTUPDATEOPERATIONS                   = 27;
  int JJTUPDATEITEM                         = 28;
  int JJTUPDATEINCREMENTITEM                = 29;
  int JJTUPDATEREMOVEITEM                   = 30;
  int JJTUPDATEPUTITEM                      = 31;
  int JJTUPDATEADDITEM                      = 32;
  int JJTINSERTSTATEMENT                    = 33;
  int JJTINSERTBODY                         = 34;
  int JJTCREATEVERTEXSTATEMENTEMPTYNOTARGET = 35;
  int JJTCREATEVERTEXSTATEMENTEMPTY         = 36;
  int JJTCREATEVERTEXSTATEMENT              = 37;
  int JJTCREATEVERTEXSTATEMENTNOTARGET      = 38;
  int JJTCREATEEDGESTATEMENT                = 39;
  int JJTINPUTPARAMETER                     = 40;
  int JJTPOSITIONALPARAMETER                = 41;
  int JJTNAMEDPARAMETER                     = 42;
  int JJTPROJECTION                         = 43;
  int JJTPROJECTIONITEM                     = 44;
  int JJTNESTEDPROJECTION                   = 45;
  int JJTNESTEDPROJECTIONITEM               = 46;
  int JJTARRAYSELECTOR                      = 47;
  int JJTARRAYNUMBERSELECTOR                = 48;
  int JJTARRAYSINGLEVALUESSELECTOR          = 49;
  int JJTARRAYRANGESELECTOR                 = 50;
  int JJTALIAS                              = 51;
  int JJTRECORDATTRIBUTE                    = 52;
  int JJTFUNCTIONCALL                       = 53;
  int JJTMETHODCALL                         = 54;
  int JJTLEVELZEROIDENTIFIER                = 55;
  int JJTSUFFIXIDENTIFIER                   = 56;
  int JJTBASEIDENTIFIER                     = 57;
  int JJTMODIFIER                           = 58;
  int JJTEXPRESSION                         = 59;
  int JJTARRAYCONCATEXPRESSION              = 60;
  int JJTARRAYCONCATEXPRESSIONELEMENT       = 61;
  int JJTMATHEXPRESSION                     = 62;
  int JJTFIRSTLEVELEXPRESSION               = 63;
  int JJTPARENTHESISEXPRESSION              = 64;
  int JJTBASEEXPRESSION                     = 65;
  int JJTFROMCLAUSE                         = 66;
  int JJTLETCLAUSE                          = 67;
  int JJTLETITEM                            = 68;
  int JJTFROMITEM                           = 69;
  int JJTBUCKET                             = 70;
  int JJTBUCKETLIST                         = 71;
  int JJTSCHEMAIDENTIFIER                   = 72;
  int JJTINDEXNAME                          = 73;
  int JJTINDEXIDENTIFIER                    = 74;
  int JJTWHERECLAUSE                        = 75;
  int JJTORBLOCK                            = 76;
  int JJTANDBLOCK                           = 77;
  int JJTNOTBLOCK                           = 78;
  int JJTPARENTHESISBLOCK                   = 79;
  int JJTCONDITIONBLOCK                     = 80;
  int JJTCOMPAREOPERATOR                    = 81;
  int JJTLTOPERATOR                         = 82;
  int JJTGTOPERATOR                         = 83;
  int JJTNEOPERATOR                         = 84;
  int JJTNEQOPERATOR                        = 85;
  int JJTGEOPERATOR                         = 86;
  int JJTLEOPERATOR                         = 87;
  int JJTLIKEOPERATOR                       = 88;
  int JJTNEAROPERATOR                       = 89;
  int JJTWITHINOPERATOR                     = 90;
  int JJTSCANDOPERATOR                      = 91;
  int JJTCONTAINSKEYOPERATOR                = 92;
  int JJTCONTAINSVALUEOPERATOR              = 93;
  int JJTEQUALSCOMPAREOPERATOR              = 94;
  int JJTRIGHTBINARYCONDITION               = 95;
  int JJTBINARYCONDITION                    = 96;
  int JJTCONTAINSVALUECONDITION             = 97;
  int JJTINSTANCEOFCONDITION                = 98;
  int JJTINDEXMATCHCONDITION                = 99;
  int JJTBETWEENCONDITION                   = 100;
  int JJTISNULLCONDITION                    = 101;
  int JJTISNOTNULLCONDITION                 = 102;
  int JJTISDEFINEDCONDITION                 = 103;
  int JJTISNOTDEFINEDCONDITION              = 104;
  int JJTCONTAINSCONDITION                  = 105;
  int JJTINOPERATOR                         = 106;
  int JJTINCONDITION                        = 107;
  int JJTNOTINCONDITION                     = 108;
  int JJTCONTAINSALLCONDITION               = 109;
  int JJTCONTAINSANYCONDITION               = 110;
  int JJTCONTAINSTEXTCONDITION              = 111;
  int JJTMATCHESCONDITION                   = 112;
  int JJTORDERBY                            = 113;
  int JJTGROUPBY                            = 114;
  int JJTUNWIND                             = 115;
  int JJTLIMIT                              = 116;
  int JJTSKIP                               = 117;
  int JJTTIMEOUT                            = 118;
  int JJTWAIT                               = 119;
  int JJTRETRY                              = 120;
  int JJTPCOLLECTION                        = 121;
  int JJTTRAVERSEPROJECTIONITEM             = 122;
  int JJTJSON                               = 123;
  int JJTMATCHEXPRESSION                    = 124;
  int JJTMATCHPATHITEM                      = 125;
  int JJTFIELDMATCHPATHITEM                 = 126;
  int JJTMATCHPATHITEMFIRST                 = 127;
  int JJTMULTIMATCHPATHITEM                 = 128;
  int JJTMULTIMATCHPATHITEMARROWS           = 129;
  int JJTMATCHFILTER                        = 130;
  int JJTMATCHFILTERITEM                    = 131;
  int JJTOUTPATHITEM                        = 132;
  int JJTINPATHITEM                         = 133;
  int JJTBOTHPATHITEM                       = 134;
  int JJTOUTPATHITEMOPT                     = 135;
  int JJTINPATHITEMOPT                      = 136;
  int JJTBOTHPATHITEMOPT                    = 137;
  int JJTTRUNCATETYPESTATEMENT              = 138;
  int JJTTRUNCATEBUCKETSTATEMENT            = 139;
  int JJTTRUNCATERECORDSTATEMENT            = 140;
  int JJTCREATEDOCUMENTTYPESTATEMENT        = 141;
  int JJTCREATEVERTEXTYPESTATEMENT          = 142;
  int JJTCREATEEDGETYPESTATEMENT            = 143;
  int JJTALTERTYPESTATEMENT                 = 144;
  int JJTDROPTYPESTATEMENT                  = 145;
  int JJTIFNOTEXISTS                        = 146;
  int JJTCREATEPROPERTYSTATEMENT            = 147;
  int JJTCREATEPROPERTYATTRIBUTESTATEMENT   = 148;
  int JJTALTERPROPERTYSTATEMENT             = 149;
  int JJTDROPPROPERTYSTATEMENT              = 150;
  int JJTCREATEINDEXSTATEMENT               = 151;
  int JJTREBUILDINDEXSTATEMENT              = 152;
  int JJTDROPINDEXSTATEMENT                 = 153;
  int JJTCREATEBUCKETSTATEMENT              = 154;
  int JJTALTERBUCKETSTATEMENT               = 155;
  int JJTDROPBUCKETSTATEMENT                = 156;
  int JJTALTERDATABASESTATEMENT             = 157;
  int JJTCOMMANDLINEOPTION                  = 158;
  int JJTEXPLAINSTATEMENT                   = 159;
  int JJTPROFILESTATEMENT                   = 160;
  int JJTLETSTATEMENT                       = 161;
  int JJTBEGINSTATEMENT                     = 162;
  int JJTCOMMITSTATEMENT                    = 163;
  int JJTROLLBACKSTATEMENT                  = 164;
  int JJTRETURNSTATEMENT                    = 165;
  int JJTIFSTATEMENT                        = 166;
  int JJTSLEEPSTATEMENT                     = 167;
  int JJTFOREACHBLOCK                       = 168;
  int JJTWHILEBLOCK                         = 169;
  int JJTIMPORTDATABASESTATEMENT            = 170;
  int JJTEXPORTDATABASESTATEMENT            = 171;
  int JJTURL                                = 172;
  int JJTBACKUPDATABASESTATEMENT            = 173;
  int JJTCHECKDATABASESTATEMENT             = 174;
  int JJTALIGNDATABASESTATEMENT             = 175;

  String[] jjtNodeName = { "Rid", "BucketIdentifier", "parse", "ParseScript", "PString", "Identifier", "PInteger", "FloatingPoint", "PNumber", "Statement",
      "StatementSemicolon", "StatementInternal", "QueryStatement", "SelectWithoutTargetStatement", "SelectStatement", "TraverseStatement", "MatchStatement",
      "DeleteStatement", "DeleteVertexStatement", "DeleteEdgeStatement", "DeleteEdgeByRidStatement", "DeleteEdgeFromToStatement", "DeleteEdgeToStatement",
      "DeleteEdgeVToStatement", "DeleteEdgeWhereStatement", "UpdateEdgeStatement", "UpdateStatement", "UpdateOperations", "UpdateItem", "UpdateIncrementItem",
      "UpdateRemoveItem", "UpdatePutItem", "UpdateAddItem", "InsertStatement", "InsertBody", "CreateVertexStatementEmptyNoTarget", "CreateVertexStatementEmpty",
      "CreateVertexStatement", "CreateVertexStatementNoTarget", "CreateEdgeStatement", "InputParameter", "PositionalParameter", "NamedParameter", "Projection",
      "ProjectionItem", "NestedProjection", "NestedProjectionItem", "ArraySelector", "ArrayNumberSelector", "ArraySingleValuesSelector", "ArrayRangeSelector",
      "Alias", "RecordAttribute", "FunctionCall", "MethodCall", "LevelZeroIdentifier", "SuffixIdentifier", "BaseIdentifier", "Modifier", "Expression",
      "ArrayConcatExpression", "ArrayConcatExpressionElement", "MathExpression", "FirstLevelExpression", "ParenthesisExpression", "BaseExpression",
      "FromClause", "LetClause", "LetItem", "FromItem", "Bucket", "BucketList", "SchemaIdentifier", "IndexName", "IndexIdentifier", "WhereClause", "OrBlock",
      "AndBlock", "NotBlock", "ParenthesisBlock", "ConditionBlock", "CompareOperator", "LtOperator", "GtOperator", "NeOperator", "NeqOperator", "GeOperator",
      "LeOperator", "LikeOperator", "NearOperator", "WithinOperator", "ScAndOperator", "ContainsKeyOperator", "ContainsValueOperator", "EqualsCompareOperator",
      "RightBinaryCondition", "BinaryCondition", "ContainsValueCondition", "InstanceofCondition", "IndexMatchCondition", "BetweenCondition", "IsNullCondition",
      "IsNotNullCondition", "IsDefinedCondition", "IsNotDefinedCondition", "ContainsCondition", "InOperator", "InCondition", "NotInCondition",
      "ContainsAllCondition", "ContainsAnyCondition", "ContainsTextCondition", "MatchesCondition", "OrderBy", "GroupBy", "Unwind", "Limit", "Skip", "Timeout",
      "Wait", "Retry", "PCollection", "TraverseProjectionItem", "Json", "MatchExpression", "MatchPathItem", "FieldMatchPathItem", "MatchPathItemFirst",
      "MultiMatchPathItem", "MultiMatchPathItemArrows", "MatchFilter", "MatchFilterItem", "OutPathItem", "InPathItem", "BothPathItem", "OutPathItemOpt",
      "InPathItemOpt", "BothPathItemOpt", "TruncateTypeStatement", "TruncateBucketStatement", "TruncateRecordStatement", "CreateDocumentTypeStatement",
      "CreateVertexTypeStatement", "CreateEdgeTypeStatement", "AlterTypeStatement", "DropTypeStatement", "IfNotExists", "CreatePropertyStatement",
      "CreatePropertyAttributeStatement", "AlterPropertyStatement", "DropPropertyStatement", "CreateIndexStatement", "RebuildIndexStatement",
      "DropIndexStatement", "CreateBucketStatement", "AlterBucketStatement", "DropBucketStatement", "AlterDatabaseStatement", "CommandLineOption",
      "ExplainStatement", "ProfileStatement", "LetStatement", "BeginStatement", "CommitStatement", "RollbackStatement", "ReturnStatement", "IfStatement",
      "SleepStatement", "ForEachBlock", "WhileBlock", "ImportDatabaseStatement", "ExportDatabaseStatement", "Url", "BackupDatabaseStatement",
      "CheckDatabaseStatement", "AlignDatabaseStatement", };
}
/* ParserGeneratorCC - OriginalChecksum=0dec94bf69545275c2e875e7030cc83a (do not edit this line) */

/* Generated by: ParserGeneratorCC: Do not edit this line. SqlParserTreeConstants.java Version 1.1.4 */
package com.arcadedb.query.sql.parser;

public interface SqlParserTreeConstants
{
  int JJTRID = 0;
  int JJTBUCKETIDENTIFIER = 1;
  int JJTPARSE = 2;
  int JJTPARSESCRIPT = 3;
  int JJTPSTRING = 4;
  int JJTIDENTIFIER = 5;
  int JJTPINTEGER = 6;
  int JJTFLOATINGPOINT = 7;
  int JJTPNUMBER = 8;
  int JJTSTATEMENT = 9;
  int JJTSTATEMENTSEMICOLON = 10;
  int JJTSTATEMENTINTERNAL = 11;
  int JJTQUERYSTATEMENT = 12;
  int JJTSELECTWITHOUTTARGETSTATEMENT = 13;
  int JJTSELECTSTATEMENT = 14;
  int JJTTRAVERSESTATEMENT = 15;
  int JJTMATCHSTATEMENT = 16;
  int JJTDELETESTATEMENT = 17;
  int JJTDELETEVERTEXSTATEMENT = 18;
  int JJTDELETEEDGESTATEMENT = 19;
  int JJTDELETEEDGEBYRIDSTATEMENT = 20;
  int JJTDELETEEDGEFROMTOSTATEMENT = 21;
  int JJTDELETEEDGETOSTATEMENT = 22;
  int JJTDELETEEDGEVTOSTATEMENT = 23;
  int JJTDELETEEDGEWHERESTATEMENT = 24;
  int JJTUPDATEEDGESTATEMENT = 25;
  int JJTUPDATESTATEMENT = 26;
  int JJTUPDATEOPERATIONS = 27;
  int JJTUPDATEITEM = 28;
  int JJTUPDATEINCREMENTITEM = 29;
  int JJTUPDATEREMOVEITEM = 30;
  int JJTUPDATEPUTITEM = 31;
  int JJTUPDATEADDITEM = 32;
  int JJTINSERTSTATEMENT = 33;
  int JJTINSERTBODY = 34;
  int JJTCREATEVERTEXSTATEMENTEMPTYNOTARGET = 35;
  int JJTCREATEVERTEXSTATEMENTEMPTY = 36;
  int JJTCREATEVERTEXSTATEMENT = 37;
  int JJTCREATEVERTEXSTATEMENTNOTARGET = 38;
  int JJTCREATEEDGESTATEMENT = 39;
  int JJTINPUTPARAMETER = 40;
  int JJTPOSITIONALPARAMETER = 41;
  int JJTNAMEDPARAMETER = 42;
  int JJTPROJECTION = 43;
  int JJTPROJECTIONITEM = 44;
  int JJTNESTEDPROJECTION = 45;
  int JJTNESTEDPROJECTIONITEM = 46;
  int JJTARRAYSELECTOR = 47;
  int JJTARRAYNUMBERSELECTOR = 48;
  int JJTARRAYSINGLEVALUESSELECTOR = 49;
  int JJTARRAYRANGESELECTOR = 50;
  int JJTALIAS = 51;
  int JJTRECORDATTRIBUTE = 52;
  int JJTFUNCTIONCALL = 53;
  int JJTMETHODCALL = 54;
  int JJTLEVELZEROIDENTIFIER = 55;
  int JJTSUFFIXIDENTIFIER = 56;
  int JJTBASEIDENTIFIER = 57;
  int JJTMODIFIER = 58;
  int JJTEXPRESSION = 59;
  int JJTARRAYCONCATEXPRESSION = 60;
  int JJTARRAYCONCATEXPRESSIONELEMENT = 61;
  int JJTMATHEXPRESSION = 62;
  int JJTFIRSTLEVELEXPRESSION = 63;
  int JJTPARENTHESISEXPRESSION = 64;
  int JJTBASEEXPRESSION = 65;
  int JJTFROMCLAUSE = 66;
  int JJTLETCLAUSE = 67;
  int JJTLETITEM = 68;
  int JJTFROMITEM = 69;
  int JJTBUCKET = 70;
  int JJTBUCKETLIST = 71;
  int JJTSCHEMAIDENTIFIER = 72;
  int JJTINDEXIDENTIFIER = 73;
  int JJTWHERECLAUSE = 74;
  int JJTORBLOCK = 75;
  int JJTANDBLOCK = 76;
  int JJTNOTBLOCK = 77;
  int JJTPARENTHESISBLOCK = 78;
  int JJTCONDITIONBLOCK = 79;
  int JJTCOMPAREOPERATOR = 80;
  int JJTLTOPERATOR = 81;
  int JJTGTOPERATOR = 82;
  int JJTNEOPERATOR = 83;
  int JJTNEQOPERATOR = 84;
  int JJTGEOPERATOR = 85;
  int JJTLEOPERATOR = 86;
  int JJTLIKEOPERATOR = 87;
  int JJTNEAROPERATOR = 88;
  int JJTWITHINOPERATOR = 89;
  int JJTSCANDOPERATOR = 90;
  int JJTCONTAINSKEYOPERATOR = 91;
  int JJTCONTAINSVALUEOPERATOR = 92;
  int JJTEQUALSCOMPAREOPERATOR = 93;
  int JJTRIGHTBINARYCONDITION = 94;
  int JJTBINARYCONDITION = 95;
  int JJTCONTAINSVALUECONDITION = 96;
  int JJTINSTANCEOFCONDITION = 97;
  int JJTINDEXMATCHCONDITION = 98;
  int JJTBETWEENCONDITION = 99;
  int JJTISNULLCONDITION = 100;
  int JJTISNOTNULLCONDITION = 101;
  int JJTISDEFINEDCONDITION = 102;
  int JJTISNOTDEFINEDCONDITION = 103;
  int JJTCONTAINSCONDITION = 104;
  int JJTINOPERATOR = 105;
  int JJTINCONDITION = 106;
  int JJTNOTINCONDITION = 107;
  int JJTCONTAINSALLCONDITION = 108;
  int JJTCONTAINSANYCONDITION = 109;
  int JJTCONTAINSTEXTCONDITION = 110;
  int JJTMATCHESCONDITION = 111;
  int JJTORDERBY = 112;
  int JJTGROUPBY = 113;
  int JJTUNWIND = 114;
  int JJTLIMIT = 115;
  int JJTSKIP = 116;
  int JJTTIMEOUT = 117;
  int JJTWAIT = 118;
  int JJTRETRY = 119;
  int JJTPCOLLECTION = 120;
  int JJTTRAVERSEPROJECTIONITEM = 121;
  int JJTJSON = 122;
  int JJTMATCHEXPRESSION = 123;
  int JJTMATCHPATHITEM = 124;
  int JJTFIELDMATCHPATHITEM = 125;
  int JJTMATCHPATHITEMFIRST = 126;
  int JJTMULTIMATCHPATHITEM = 127;
  int JJTMULTIMATCHPATHITEMARROWS = 128;
  int JJTMATCHFILTER = 129;
  int JJTMATCHFILTERITEM = 130;
  int JJTOUTPATHITEM = 131;
  int JJTINPATHITEM = 132;
  int JJTBOTHPATHITEM = 133;
  int JJTOUTPATHITEMOPT = 134;
  int JJTINPATHITEMOPT = 135;
  int JJTBOTHPATHITEMOPT = 136;
  int JJTTRUNCATETYPESTATEMENT = 137;
  int JJTTRUNCATEBUCKETSTATEMENT = 138;
  int JJTTRUNCATERECORDSTATEMENT = 139;
  int JJTCREATEDOCUMENTTYPESTATEMENT = 140;
  int JJTCREATEVERTEXTYPESTATEMENT = 141;
  int JJTCREATEEDGETYPESTATEMENT = 142;
  int JJTALTERTYPESTATEMENT = 143;
  int JJTDROPTYPESTATEMENT = 144;
  int JJTIFNOTEXISTS = 145;
  int JJTCREATEPROPERTYSTATEMENT = 146;
  int JJTCREATEPROPERTYATTRIBUTESTATEMENT = 147;
  int JJTALTERPROPERTYSTATEMENT = 148;
  int JJTDROPPROPERTYSTATEMENT = 149;
  int JJTCREATEINDEXSTATEMENT = 150;
  int JJTREBUILDINDEXSTATEMENT = 151;
  int JJTDROPINDEXSTATEMENT = 152;
  int JJTCREATEBUCKETSTATEMENT = 153;
  int JJTALTERBUCKETSTATEMENT = 154;
  int JJTDROPBUCKETSTATEMENT = 155;
  int JJTALTERDATABASESTATEMENT = 156;
  int JJTCOMMANDLINEOPTION = 157;
  int JJTEXPLAINSTATEMENT = 158;
  int JJTPROFILESTATEMENT = 159;
  int JJTLETSTATEMENT = 160;
  int JJTBEGINSTATEMENT = 161;
  int JJTCOMMITSTATEMENT = 162;
  int JJTROLLBACKSTATEMENT = 163;
  int JJTRETURNSTATEMENT = 164;
  int JJTIFSTATEMENT = 165;
  int JJTSLEEPSTATEMENT = 166;
  int JJTFOREACHBLOCK = 167;
  int JJTWHILEBLOCK = 168;
  int JJTIMPORTDATABASESTATEMENT = 169;
  int JJTEXPORTDATABASESTATEMENT = 170;
  int JJTURL = 171;
  int JJTBACKUPDATABASESTATEMENT = 172;
  int JJTCHECKDATABASESTATEMENT = 173;
  int JJTALIGNDATABASESTATEMENT = 174;


  String[] jjtNodeName = {
    "Rid",
    "BucketIdentifier",
    "parse",
    "ParseScript",
    "PString",
    "Identifier",
    "PInteger",
    "FloatingPoint",
    "PNumber",
    "Statement",
    "StatementSemicolon",
    "StatementInternal",
    "QueryStatement",
    "SelectWithoutTargetStatement",
    "SelectStatement",
    "TraverseStatement",
    "MatchStatement",
    "DeleteStatement",
    "DeleteVertexStatement",
    "DeleteEdgeStatement",
    "DeleteEdgeByRidStatement",
    "DeleteEdgeFromToStatement",
    "DeleteEdgeToStatement",
    "DeleteEdgeVToStatement",
    "DeleteEdgeWhereStatement",
    "UpdateEdgeStatement",
    "UpdateStatement",
    "UpdateOperations",
    "UpdateItem",
    "UpdateIncrementItem",
    "UpdateRemoveItem",
    "UpdatePutItem",
    "UpdateAddItem",
    "InsertStatement",
    "InsertBody",
    "CreateVertexStatementEmptyNoTarget",
    "CreateVertexStatementEmpty",
    "CreateVertexStatement",
    "CreateVertexStatementNoTarget",
    "CreateEdgeStatement",
    "InputParameter",
    "PositionalParameter",
    "NamedParameter",
    "Projection",
    "ProjectionItem",
    "NestedProjection",
    "NestedProjectionItem",
    "ArraySelector",
    "ArrayNumberSelector",
    "ArraySingleValuesSelector",
    "ArrayRangeSelector",
    "Alias",
    "RecordAttribute",
    "FunctionCall",
    "MethodCall",
    "LevelZeroIdentifier",
    "SuffixIdentifier",
    "BaseIdentifier",
    "Modifier",
    "Expression",
    "ArrayConcatExpression",
    "ArrayConcatExpressionElement",
    "MathExpression",
    "FirstLevelExpression",
    "ParenthesisExpression",
    "BaseExpression",
    "FromClause",
    "LetClause",
    "LetItem",
    "FromItem",
    "Bucket",
    "BucketList",
    "SchemaIdentifier",
    "IndexIdentifier",
    "WhereClause",
    "OrBlock",
    "AndBlock",
    "NotBlock",
    "ParenthesisBlock",
    "ConditionBlock",
    "CompareOperator",
    "LtOperator",
    "GtOperator",
    "NeOperator",
    "NeqOperator",
    "GeOperator",
    "LeOperator",
    "LikeOperator",
    "NearOperator",
    "WithinOperator",
    "ScAndOperator",
    "ContainsKeyOperator",
    "ContainsValueOperator",
    "EqualsCompareOperator",
    "RightBinaryCondition",
    "BinaryCondition",
    "ContainsValueCondition",
    "InstanceofCondition",
    "IndexMatchCondition",
    "BetweenCondition",
    "IsNullCondition",
    "IsNotNullCondition",
    "IsDefinedCondition",
    "IsNotDefinedCondition",
    "ContainsCondition",
    "InOperator",
    "InCondition",
    "NotInCondition",
    "ContainsAllCondition",
    "ContainsAnyCondition",
    "ContainsTextCondition",
    "MatchesCondition",
    "OrderBy",
    "GroupBy",
    "Unwind",
    "Limit",
    "Skip",
    "Timeout",
    "Wait",
    "Retry",
    "PCollection",
    "TraverseProjectionItem",
    "Json",
    "MatchExpression",
    "MatchPathItem",
    "FieldMatchPathItem",
    "MatchPathItemFirst",
    "MultiMatchPathItem",
    "MultiMatchPathItemArrows",
    "MatchFilter",
    "MatchFilterItem",
    "OutPathItem",
    "InPathItem",
    "BothPathItem",
    "OutPathItemOpt",
    "InPathItemOpt",
    "BothPathItemOpt",
    "TruncateTypeStatement",
    "TruncateBucketStatement",
    "TruncateRecordStatement",
    "CreateDocumentTypeStatement",
    "CreateVertexTypeStatement",
    "CreateEdgeTypeStatement",
    "AlterTypeStatement",
    "DropTypeStatement",
    "IfNotExists",
    "CreatePropertyStatement",
    "CreatePropertyAttributeStatement",
    "AlterPropertyStatement",
    "DropPropertyStatement",
    "CreateIndexStatement",
    "RebuildIndexStatement",
    "DropIndexStatement",
    "CreateBucketStatement",
    "AlterBucketStatement",
    "DropBucketStatement",
    "AlterDatabaseStatement",
    "CommandLineOption",
    "ExplainStatement",
    "ProfileStatement",
    "LetStatement",
    "BeginStatement",
    "CommitStatement",
    "RollbackStatement",
    "ReturnStatement",
    "IfStatement",
    "SleepStatement",
    "ForEachBlock",
    "WhileBlock",
    "ImportDatabaseStatement",
    "ExportDatabaseStatement",
    "Url",
    "BackupDatabaseStatement",
    "CheckDatabaseStatement",
    "AlignDatabaseStatement",
  };
}
/* ParserGeneratorCC - OriginalChecksum=7bdf3e340a45ffe72af7955882be9c99 (do not edit this line) */

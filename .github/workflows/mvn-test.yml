name: Java CI - test

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        continue-on-error: [ false ]
        include:
          - os: windows-latest
            continue-on-error: true

    runs-on: ${{ matrix.os }}

    steps:
      - uses: xembly/workflow-manager@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          run: clean, cancel
          verbose: false
      - uses: actions/checkout@v3.3.0
      - uses: actions/setup-python@v4
      - uses: pre-commit/action@v3.0.0

      - name: Set up GraalVM 11
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.3.0'
          gds-token: ${{ secrets.GDS_TOKEN }}
          java-version: '11'
          cache: 'maven'
          components: 'native-image,js'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install jars
        continue-on-error: ${{ matrix.continue-on-error }}
        run: mvn --show-version clean install -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test
        continue-on-error: ${{ matrix.continue-on-error }}
        run: mvn verify  -Pintegration -Pcoverage -Pdocker --batch-mode  --errors --fail-at-end --show-version  -pl !e2e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: E2E Test
        if: success()
        run: mvn verify -pl e2e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Reporter
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Report - ${{ matrix.os }}
          path: '**/surefire-reports/TEST*.xml'
          list-suites: 'failed'
          list-tests: 'failed'
          reporter: java-junit

      - name: Get coverage files
        run: |
          echo ::set-output name=COVERAGE_FILES::$(find **/jacoco*.xml -printf '%p,')
        id: coverage-files-generator

      - name: Codacy coverage reporter
        if: ${{ matrix.os != 'windows-latest' }}
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ${{ steps.coverage-files-generator.COVERAGE_FILES }}

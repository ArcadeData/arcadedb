name: Java CI - test

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: xembly/workflow-manager@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          run: clean, cancel
          verbose: false
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: pre-commit/action@v3.0.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up GraalVM 21
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: "21"
          distribution: "graalvm-community"
          github-token: ${{ secrets.GITHUB_TOKEN }}

#        uses: graalvm/setup-graalvm@v1
#        with:
#          version: '22.3.2'
#          gds-token: ${{ secrets.GDS_TOKEN }}
#          java-version: '21'
#          cache: 'maven'
#          components: 'native-image,js'
#          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install jars
        continue-on-error: ${{ matrix.continue-on-error }}
        run: mvn --show-version clean install -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test
        run: mvn verify  -Pintegration -Pcoverage -Pdocker --batch-mode  --errors --fail-never --show-version  -pl !e2e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: E2E Test
        if: success()
        run: mvn verify -pl e2e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Reporter
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Report - ${{ matrix.os }}
          path: "**/surefire-reports/TEST*.xml"
          list-suites: "failed"
          list-tests: "failed"
          reporter: java-junit

      - name: Get coverage files
        id: coverage-files-generator
        run: echo "COVERAGE_FILES=$(find . -path **/jacoco*.xml -printf '%p,')" >> "$GITHUB_OUTPUT"

      - name: Codacy coverage reporter
        uses: codacy/codacy-coverage-reporter-action@89d6c85cfafaec52c72b6c5e8b2878d33104c699 # v1.3.0
        with:
          language: java
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ${{ steps.coverage-files-generator.outputs.COVERAGE_FILES }}

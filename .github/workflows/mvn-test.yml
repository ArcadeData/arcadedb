name: Java CI - test

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        continue-on-error: [false]
        include:
          - os: windows-latest
            continue-on-error: true

    runs-on: ${{ matrix.os }}

    steps:
      - uses: xembly/workflow-manager@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          run: clean, cancel
          verbose: false
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: pre-commit/action@v3.0.1

      - name: Set up QEMU
        if: ${{ matrix.os != 'windows-latest' }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: ${{ matrix.os != 'windows-latest' }}
        uses: docker/setup-buildx-action@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 21
          cache: "maven"
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Install jars
        continue-on-error: ${{ matrix.continue-on-error }}
        run: mvn --show-version clean install -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test
        continue-on-error: ${{ matrix.continue-on-error }}
        run: mvn verify  -Pintegration -Pcoverage -Pdocker --batch-mode  --errors --fail-never --show-version  -pl !e2e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: E2E Test
        if: ${{ success() && matrix.os != 'windows-latest' }}
        run: mvn verify -pl e2e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Reporter
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Report - ${{ matrix.os }}
          path: "**/surefire-reports/TEST*.xml"
          list-suites: "failed"
          list-tests: "failed"
          reporter: java-junit

      - name: Get coverage files
        if: ${{ matrix.os != 'windows-latest' }}
        id: coverage-files-generator
        run: |
          echo ::set-output name=COVERAGE_FILES::$(find **/jacoco*.xml -printf '%p,')

      - name: Codacy coverage reporter
        if: ${{ matrix.os != 'windows-latest' }}
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ${{ steps.coverage-files-generator.COVERAGE_FILES }}

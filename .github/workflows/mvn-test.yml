name: Java CI - test

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Ensure SHA pinned actions
        uses: zgosalvez/github-actions-ensure-sha-pinned-actions@25ed13d0628a1601b4b44048e63cc4328ed03633 # v3.0.22
      - name: Run pre-commit
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: "3.13.0"
          cache: "pip"
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Set up Node
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: "22"

      - name: Setup Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: "3.13.0"

      - name: Setup UV package manager
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv --version

      - name: Set up JDK 17
        uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12 # v4.7.0
        with:
          distribution: "temurin"
          java-version: 17
          cache: "maven"

      - name: Install jars
        run: ./mvnw --show-version clean install -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test
        run: ./mvnw verify  -Pintegration -Pcoverage -Pdocker --batch-mode  --errors --fail-never --show-version  -pl !e2e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: E2E Tests
        if: success()
        run: ./mvnw verify -pl e2e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: E2E Node.js Tests
        if: success()
        working-directory: e2e-js
        run: |
          npm install
          npm test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: E2E Python Tests
        if: success()
        working-directory: e2e-python
        run: |
          uv pip install --system -e  .
          uv pip install --system pytest
          pytest tests/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Unit Tests Reporter
        uses: dorny/test-reporter@6e6a65b7a0bd2c9197df7d0ae36ac5cee784230c # v2.0.0
        if: success() || failure()
        with:
          name: Unit Tests Report
          path: "**/surefire-reports/TEST*.xml"
          list-suites: "failed"
          list-tests: "failed"
          reporter: java-junit

      - name: IT Tests Reporter
        uses: dorny/test-reporter@6e6a65b7a0bd2c9197df7d0ae36ac5cee784230c # v2.0.0
        if: success() || failure()
        with:
          name: IT Tests Report
          path: "**/failsafe-reports/TEST*.xml"
          list-suites: "failed"
          list-tests: "failed"
          reporter: java-junit

      - name: Get coverage files
        id: coverage-files-generator
        if: success() || failure()
        run: echo "COVERAGE_FILES=$(find . -path **/jacoco*.xml -printf '%p,')" >> "$GITHUB_OUTPUT"

      - name: Codacy coverage reporter
        uses: codacy/codacy-coverage-reporter-action@89d6c85cfafaec52c72b6c5e8b2878d33104c699 # v1.3.0
        if: success() || failure()
        with:
          language: java
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ${{ steps.coverage-files-generator.outputs.COVERAGE_FILES }}
